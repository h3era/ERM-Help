<html><head><meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<title>JSON</title>
<LINK REL="stylesheet" MEDIA="screen" TYPE="text/css" HREF="../style.css">
<script language="JScript" src="../script.js"></script>
</head>
<body>
<h2 align="center">Файлы .json<a href="../ERA/index.htm" title="Работает только с ERA.."><img src="../Img/era.gif" class="TE"></a><br>
<i class="file">(Выдержка из истории изменений ERA по json-файлам)</i></h2>

<p><u>2.9.11</u>: Добавлена %T(ключ_переводимой_строки_из_json) интерполяция в ^...^ строках. Теперь переводы без параметров можно вставлять напрямую.
<script type="erm">!!IF:M^Добро пожаловать в {%T(mymod.woody_castle_object)}!^;</script></p>

<p><u>2.8.4</u>: Все языковые файлы <i class="file">Lang/*.json</i> загружаются и из каталога карт (например, <i class="file">Maps/Arrogance/Lang/arrogance.json</i>), а также записываются в сохранения и подгружаются при загрузке игры. Таким образом можно выпускать карты с поддержкой перевода.</p>

<p><u>2.8.3</u>: Улучшен синтаксис json-файлов (<i class="file">Mod\Lang\*.json</i>, UTF-8 encoding).<br>
Поддерживаются вложенные объекты.<br>
В json объекты – множества вида &laquo;Ключ - Значение&raquo; между фигурными скобками.
<blockquote id="Q1"><pre class="erm">{
   "wogrev": {
	"no_gold_message": "Нет больше золота, @name@!",
	"no_mercy": "Пощады не будет!"
   }
}</pre></blockquote>

Выше приведённый документ аналогичен следующему:
<blockquote id="Q1"><pre class="erm">{
   "wogrev.no_gold_message": "Нет больше золота, @name@!",
   "wogrev.no_mercy": "Пощады не будет!"
}</pre></blockquote>

Но вместо постоянного повтора с префиксом имени ввода используются вложенные ключи.
<script type="erm">!!SN:T^wogrev.no_gold_message^/?z2/^name^/^Geralt^;
!!IF:M^%Z2^;</script></p>

<p><u>2.6.2</u>: Добавлена поддержка локализации ERM скриптов.<br>
Все <i class="file">Lang/*.json</i> файлы грузятся и объединяются в один словарь типа &laquo;Ключ - Значение&raquo;, 
в котором хранятся строки с переводом.
Json-файлы должны сохраняться в кодировке UTF-8, предпочтительно с Unix маркерами концов строк (#10 = 0x0A в качестве разделителя строк).<br>
Формат файлов следующий:
<blockquote id="Q1"><pre class="erm">{
   "уникальный глобальный ключ-ID строки": "перевод строки",
   "другой ключ": "перевод другой строки"
}</pre></blockquote>

Во время загрузки текст автоматически конвертируется из кодировки UTF-8 (Юникод, например китайской,польской) в локальную кодировку ANSI, используемую ОС игрока. Для русскоязычного сегмента пользователей это чаще всего Windows-1251 (Кириллица, она же CP-1251).<br>
Таким образом вы имеете возможность поставлять перевод, который другие люди могут открыть и редактировать без потери данных или превращения строк в нечитаемый текст.<br>
Символы, которые не могут быть представлены в кодировке ОС пользователя, в игре будут заменены на '?'.</p>
<p><u>Пример из практики</u>:
<blockquote id="Q1"><pre class="erm">{
   "eqs.this_day_savegame_name": "@day@_@player@",
   "eqs.end_turn_autosave_name": "@day@_@player@_End",
   "eqs.quicksave_name": "@day@_@player@_Quick",
   "eqs.saved_msg": "Сохранено!",
   "eqs.quicksaved_msg": "Быстрое сохранение!"
}</pre></blockquote>

Рекомендуется давать префикс каждому ключу в виде аббревиатуры мода или имени автора, например "pm." для Феникс-Мода.</p>
<p>Переводы могут также содержать подставляемые параметры в виде "@имя параметра@". Такие параметры заменяются на конкретные значения во время перевода.
ERA-команда <a href="../Rec/SN_era.htm#T">!!SN:T</a> как раз и служит для получения перевода по ключу.
<script type="erm">!!SN:T(ключ)/?(z-переменная, куда записать перевод)/(имя параметра 1)/(значение параметра 1)/(имя параметра 2)/(значение параметра 2)...;</script></p>

<p><u>2.47.0</u>: Добавлена возможность глобального перенаправления ресурсов через JSON-файлы.<br>
<i class="file">Data\Redirections\*.json</i></p>
<p>Формат:
<blockquote id="Q1"><pre class="erm">{
   "старое имя ресурса": "новое имя ресурса",
   "старое имя ресурса": "новое имя ресурса"...
}</pre></blockquote>

Папка <i class="file">Data\Redirections\Missing\*.json</i> работает схожим образом, но перенаправления применяются только к отсутствующим ресурсам.<br>
Например, можно удалять часть картинок вроде <i class="file">zpic1005.pcx</i> и перенаправить их на другие, всё ещё присутствующие в lod/pac файлах.<br>
Вы можете прописать такие перенаправления, если ваш мод зависит от другого графического мода, но вы хотите дать пользователям возможность использовать его и в отдельности.</p>

<p>&nbsp;</p>
<script src="../erm.js"></script></body></html>
