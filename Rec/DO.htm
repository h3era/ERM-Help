<html><head><meta http-equiv="Content-Type" content="text/html; charset=windows-1251"><title>
Ресивер DO</title>
<LINK REL="stylesheet" MEDIA="screen" TYPE="text/css" HREF="../style.css">
<script src="script.js"></script></head>

<body scroll="no">
<DIV id="buttonMenu">
<SPAN CLASS="options">Опции&nbsp;DO:&nbsp;&nbsp;</SPAN>

 <SPAN CLASS="buttoninactive">A</SPAN>
 <SPAN CLASS="buttoninactive">B</SPAN>
 <SPAN CLASS="buttoninactive">C</SPAN>
 <SPAN CLASS="buttoninactive">D</SPAN>
 <SPAN CLASS="buttoninactive">E</SPAN>
 <SPAN CLASS="buttoninactive">F</SPAN>
 <SPAN CLASS="buttoninactive">G</SPAN>
 <SPAN CLASS="buttoninactive">H</SPAN>
 <SPAN CLASS="buttoninactive">I</SPAN>
 <SPAN CLASS="buttoninactive">J</SPAN>
 <SPAN CLASS="buttoninactive">K</SPAN>
 <SPAN CLASS="buttoninactive">L</SPAN>
 <SPAN CLASS="buttoninactive">M</SPAN>
 <SPAN CLASS="buttoninactive">N</SPAN>
 <SPAN CLASS="buttoninactive">O</SPAN>
	<A HREF="#P" title="Запустить цикл" CLASS="button">P</A>
 <SPAN CLASS="buttoninactive">Q</SPAN>
 <SPAN CLASS="buttoninactive">R</SPAN>
 <SPAN CLASS="buttoninactive">S</SPAN>
 <SPAN CLASS="buttoninactive">T</SPAN>
 <SPAN CLASS="buttoninactive">U</SPAN>
 <SPAN CLASS="buttoninactive">V</SPAN>
 <SPAN CLASS="buttoninactive">W</SPAN>
 <SPAN CLASS="buttoninactive">X</SPAN>
 <SPAN CLASS="buttoninactive">Y</SPAN>
 <SPAN CLASS="buttoninactive">Z</SPAN>

</DIV>

<DIV id="text">
<p align="center"><font size="5">Ресивер <b>DO</b> 
(циклическая функция)</font></p>
<p>
<br>
<b><font id="red">!!DO#1/#2/#3/#4:XXXX;</font> 
- вызывает функцию несколько раз.</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #1 – номер функции<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #2 – начальное значение<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #3 – конечное значение<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #4 – шаг<br>
<b><u onclick="HideIt(1)" class="h">Комментарий (<b id="show1">показать</b>)</u></b><div id="1" class="b">
Как и для <a href="FU.htm">FU</a>, если вы вызываете циклическую ф-цию инструкцией, тело функции должно быть описано ДО инструкции !#DO.<br>
Переменная x16 всегда хранит номер текущего круга функции. Например, если дельта функции (конечное значение минус начальное) равна 12, 
в первый раз x16 будет равно 1, во второй 2 и т.д. до 12. 
Изменяя переменную x16 фактически можно замедлять или ускорять выполнение функции, или завершить её, 
установив в x16 конечное значение функции (можно большее конечного значения). 
Помните - параметры функций можно устанавливать только внутри самой функции!
Для каждой функции все <i>x</i>-переменные (x1..x16) уникальны, т.е. две разные функции будут иметь разные значения <i>x</i>-переменных.<br>
<u onclick="HideIt(7)" class="h"><b>Замечание</b><a href="../ERA/index.htm" title="Работает только с ERA.."><img src="../Img/era.gif" class="TE"></a>(<u id="show7">показать</u>)</u><div id="7" class="b">Переменные x1..x15 устанавливаются только один раз при старте функции, а x16 – один раз для каждого круга циклической функции.<br>
Синтаксис &quot;<b>?$</b>&quot; поддерживается, но значения будут установлены по окончании выполнения фукции, а не на каждом её круге, как это описано <a href="#more" onclick="HideIt(4)">ниже</a>.</div><br>
<br><u><b onclick="HideIt(2)" class="h">Пример 1 (<b id="show2">показать</b>)</b></u><div id="2" class="b">
<script type="erm">!!DO1/2/10/2:P5;
...
!?FU1;
!!IF:M^Переменная x1=%X1 и x16=%X16^;
!!VRx1:+1;
!!VRx16:+1;</script>
Вы должны увидеть следующее:
<script type="erm"> Переменная x1=5 и x16=2
 Переменная x1=6 и x16=5
 Переменная x1=7 и x16=8</script></div><br>
<u><b onclick="HideIt(3)" class="h">Пример 2 (<b id="show3">показать</b>)</b></u><div id="3" class="b">
<script type="erm">!!DO2/1/66/1:P47/11; - установить значение 47 для переменной x1
!?FU2;
!!VRv5:Sx1+1-x16;
!!IF:M^Значения переменных: x16=%X16 , и v5=%V5^;
!!VRx16:+7; - прыжок на 8</script>
Вместо 66 вы получите лишь 9 циклов, с такими значениями:<pre>
<b>x16:</b>	 1	 9	17	25	33	41	49	57	 65
<b>v5:</b>	47	39	31	23	15	 7	-1	-9	-17</pre>

Также <font id="erm"><b class="re">!!VR</b>x16:+7;</font> может быть заменено (например) на R7:
<script type="erm">!!VRx16:R7; - следующий прыжок будет сразу на седьмой цикл</script>
или (например) с Rx2: 
<script type="erm">!!VRx16:Rx2; - добавление случайного числа до x2, в случае выше x2 равно 11.</script></div>
</div></p>
<p>
<u><b onclick="HideIt(8)" class="h">Вопросы и ответы (<b id="show8">показать</b>)</b></u><div id="8" class="b">
<p><div id="Q1"><i id="bold">Как x16 влияет на &quot;вложенные&quot; DO-ресиверы?</i></div>
Каждый DO-ресивер имеет своё отдельное значение x16.</p>
<p><div id="Q1"><i id="bold">Скажем, у меня есть следующий код: (это будет отражать, скажем, проверку массива 10х11 для чего-либо).
<script type="erm">!!DO1/1/10/1:P;
!?FU1;
!!DO2/20/30/1:P;
;точка А
!?FU2;
;точка Б</script>
Мой вопрос - точка Б будет иметь значение x16 между 1 и 10 или между 20 и 30?</i></div>
Между 20 и 30.</p>
<p><div id="Q1"><i id="bold">Также, в точке А x16 будет принимать значение от DO1 или DO2?</i></div>
DO1, потому что линия находится внутри функции FU1.</p>
<p><div id="Q1"><i id="bold">У меня есть главная функция, покрывающая всех героев (DO1/0/155/1), 
но у каждого героя я должен узнать существ в его слотах (DO2/0/6/1). Как это можно?</i></div>
Это решается простым &quot;вложением&quot; одной функции в другую.</p></div></p>
<p id="Q1">См. также: ресиверы-циклы <a href="re.htm">re/br/co</a></p>
<hr noshade>
<p>
<a name="P"></a><b><font id="red">P$1[/$2/$3/../$16]</font></b><br>
$1, $2 &hellip; $16 служат для установки x1..x16. Эти параметры могут быть использованы где угодно (в пределах функции) 
вместо использования стандартных переменных. Когда вы вызываете другую функцию, все параметры будут наследованы.<br>
Функция начинает работать после указания команды P, например:
<script type="erm">!!DO1/1/15/1:P; - правильно
!!DO1/1/15/1; - неправильно</script>
Все команды ERM (ресиверы, инструкции) для использования имеют хотя бы один 
параметр в обязательном порядке.</p>
<p><a name="more"></a>
<b><u><i onclick="HideIt(4)" class="h">Расширение синтаксиса ресивера DO (<b id="show4">показать</b>)</i></u></b><br><div id="4" class="b">
Ресиверы FU и DO имеют расширенный синтаксис для запоминания некоторых значений. 
Теперь вы можете использовать синтаксис &quot;<b>?$</b>&quot; (получить) для записи значения в переменную. 
Вы можете использовать <i>v</i>, <i>y-</i> или <i>y</i> переменные для записи значений.<br>
Например:
<script type="erm">!!FU...:Pv1/v2/v3/?v4;</script>
Теперь, если вы измените значение переменной x4 внутри функции, к примеру: 
<b id="erm"><font class="re">!!VR</font>x4:Sx1;</b>, - значение будет скопировано в v4 после окончания циклич.функции (цикла). 
Само значение переменной (v4) не передаётся в x4 при вызове функции, взамен передаёт номер переменной (в примере x4 будет равно 4). 
В ресивере DO значение номера (4) будет одинаковым при каждом цикле.<br>
Так, если вы установите её внутри тела функции, значение будет скопировано в переменную-получатель после окончания цикла 
и восстановлено на индекс переменной в начале следующего цикла.<br>
<u><b onclick="HideIt(5)" class="h">Пример (<b id="show5">показать</b>)</b></u><div id="5" class="b">
<script type="erm">!?FU2;
!!VRx2:Sx2+17;
!!VRx3:Sx1+17;

!?FU1;
!!FU2:P13/?y-1/?y-2;

!#IF:M^%Y-1, %Y-2^;
!#FU1:P;
!#IF:M^%Y-1, %Y-2^;
Вы увидите "0, 0" и затем "16, 30"</script></div></p>

<p>Также, вы можете использовать синтаксис &quot;<b>=$</b>&quot; для установки значения на каждом цикле DO. Т.е если вы измените данную переменную внутри тела функции, переменная будет допущена в следующий цикл функции изменённой.<br>
<i id="bold">Замечание:</i> используйте такой синтаксис для циклич. фунций предельно внимательно, иначе ваш скрипт будет работать не так как задумывалось, и вы не сразу поймёте причину ошибки.</p>
<u><b onclick="HideIt(6)" class="h">Примеры (<b id="show6">показать</b>)</b></u><div id="6" class="b"><p>
<script type="erm">...
!!VRv35:S10;
!!DO3...:P=v35;
!?FU3;
!!VRv35:Sx1 +1;</script>
В таком случае вы получите значения x1 равными 10, 11, 12, 13&hellip; при начале каждого цикла.<br>
Но если вы напишите код как
<script type="erm">...
!!VRv35:S10;
!!DO3...:Pv35;
!?FU3;
!!VRv35:Sx1 +1;</script>
то x1 будет равен 10, 10, 10&hellip; в начале каждого цикла.<br>
Можно использовать несколько таких переменных в функции.</p>
<p>Вы можете использовать похожие переменные (см. пример ниже) с синтаксисом &quot;<b>?$</b>&quot; и &quot;<b>=$</b>&quot;.
<script type="erm">!?FU2;
!!VRx2:Sx1 +17;
!!IF:M^x=%X1^;

!?FU1;
!!VRy-1:S33;
!!DO2/1/20/1:P=y-1/?y-1;

!#FU1:P;
Вы увидите 33, 50, 67...</script></p>
</div>

<hr noshade>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
</DIV>
<script src="../erm.js"></script></body></html>