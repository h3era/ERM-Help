<html><head><meta http-equiv="Content-Type" content="text/html; charset=windows-1251"><title>
re-br-co</title>
<LINK REL="stylesheet" MEDIA="screen" TYPE="text/css" HREF="../style.css">
<script language="JScript" src="script.js"></script></head>

<body>
<p align="center"><font size="5">Ресиверы <b>RE</b>/<b>BR</b>/<b>CO</b></font><a href="../ERA/index.htm" title="Работает только с ERA.."><img src="../Img/era.gif" class="TE"></a><br>
<font size="4">(повторить – прервать – продолжить)</font></p>
<p><br>ERA дала возможность, помимо всего прочего, использовать для написания ERM-скриптов скоростные циклы высокого уровня через новые ресиверы: <a href="#">!!re</a>, <a href="#br_co">!!br</a>, <a href="#br_co">!!co</a>.</p>
<hr noshade>
<p><b><font id="red">!!re $1[/#2/#3/#4]:;<br>
&nbsp; &nbsp;&hellip;<br>
!!en:;</font></b><br>
Повторяет блок кода. Только первый аргумент ($1) обязателен.
<pre>         $1 – переменная счётчика цикла (любая числовая локальная или глобальная переменная)
         #2 – начальное значение счётчика (опционально). По умолчанию: значение переменной-счётчика цикла.
         #3 – конечное значение счётчика (опционально). По умолчанию: начальное значение счётчика цикла.
         #4 – шаг цикла (опционально). По умолчанию: 1, если установлено значение для #3, в противном случае будет равно 0.</pre>
<u>Пример</u>:
<script type="erm">; Бесконечный цикл раздражающих сообщений:
!!re i:;
  !!IF:M^Дай денег, по-братски!^;
!!en:;</script>
<b><u onclick="HideIt(2)" class="h">Комментарии (<b id="show2">показать</b>)</u></b><div id="2" class="b">
Сначала инициализируется переменная счётчика цикла.<br>
Значения #2 и #3 запоминаются для всего цикла и не будут оцениваться на каждой итерации (повторе).<br>
Шаг определяет, какое значение необходимо добавить в переменную счётчика после каждой итерации. 
Он также определяет тип условия остановки итерации.<br>
Положительный шаг проверяет, является ли значение $1&gt;#3.<br>
Отрицательный шаг проверяет, является ли значение $1&lt;#3.
<script type="erm">; Распустить армию текущему герою
!!re i/0/6:;
  !!HE-1:C0/i/-1/0;
!!en:;

; Показать 10, 8, 6, 4, 2 (1 и 0 не будут показаны)
!!re i/10/1/-2:;
  !!IF:M^%Vi^;
!!en:;</script>
</div></p>
<p><a name="br_co"></a>Логика работы ресивера такова:
<ul id="T0">
<li>На <b><font id="red">!!re</font></b> (&quot;<i>repeat</i>&quot; – повторить) проверяется, вышел ли счётчик за пределы конечного значения #3? Если да, то выполнение передаётся соответствующему блоку !!en.</li>
<li>Счётчик на <b><font id="red">!!en</font></b> увеличивается на шаг, и, если условие остановки не выполняется, будет выполнен следующий ресивер после ближайшего !!re.</li>
<li><b><font id="red">!!co</font></b> (&quot;<i>continue</i>&quot; – продолжить) с условием (опционально) немедленно переходит к ресиверу цикла !!en, который, в свою очередь, будет выполняться в соответствии с логикой работы.</li>
<li><b><font id="red">!!br</font></b> (&quot;<i>break</i>&quot; – прервать) с условием (опционально) немедленно переходит за ресивер цикла !!en.</li>
</ul>
<u>Пример</u>:
<script type="erm">; Показать номер 1го пустого слота героя, если он найден
!!re i/0/6:;
  !!HE-1:C0/i/?t/?k; получить тип монстров в слоте i и их кол-во
  !!if|t=-1/k=0:;
    !!IF:M^Номер свободного слота %Vi^;
    !!br:; прервать и выйти из цикла
  !!en:;
!!en:;
!!IF&i>6:M^Свободных слотов не найдено^;</script>
Максимально допустимо 16 вложенных блоков <a href="iee.htm">!!if</a> / <a href="#">!!re</a>.<br>
<i id="bold">Замечание:</i> <a href="#">!!re</a> не поддерживает непосредственное использование условий, однако ничто не мешает вам использовать &quot;обёртывание&quot; цикла ресивером <a href="iee.htm">!!if</a>.
<script type="erm">!!if&условие:;
  !!re ...:;
    ...
  !!en:;
!!en:;</script></p>
<p>Циклы для большинства задач имеют тип WHILE&nbsp;DO, то есть с возможностью нуля итераций. Но тем не менее, !!re позволяет писать любые: от FOR&nbsp;<i>i</i> FROM&nbsp;<i>x</i> TO&nbsp;<i>y</i> BY&nbsp;<i>step</i>, до LOOP и DO&nbsp;WHILE.<br>
<u>Пример</u>:
<script type="erm">!!re i;
  ...
  !!br&условие выхода:; это DO ... WHILE
!!en:;

!!re i;
  !!br&условие выхода:; это WHILE ... DO
  ...
!!en:;</script></p>
<p>Для ресиверов контроля циклов <a href="re.htm#br_co">!!br</a> / <a href="re.htm#br_co">!!co</a> существует поддержка уровней циклов.<br>
<b id="erm"><font class="re">!!br</font> 1:;</b> равнозначно <b id="erm"><font class="re">!!br</font>:;</b> и означает прервать текущий (наиболее вложенный) цикл.<br>
<b id="erm"><font class="re">!!br</font> 2:;</b> прервёт цикл на уровень выше, а <b id="erm"><font class="re">!!br</font> 3:;</b> – ещё выше по уровню, и т.д. &hellip;<br>
<u>Пример</u>:
<script type="erm">!!re i/0/6:; цикл 2го уровня
  !!re j/0/4:; цикл 1го уровня
    !!IF:M^%Vi %Vj^;
      !!if&i=3:; Последнее показанное сообщение будет "3 0"
        !!br 2:; прервать цикл 2го уровня
      !!en;
  !!en:;
!!en:;</script>
</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<script src="../erm.js"></script></body></html>